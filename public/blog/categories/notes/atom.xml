<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: notes | Han Qin . Me]]></title>
  <link href="http://hanqin.me/blog/categories/notes/atom.xml" rel="self"/>
  <link href="http://hanqin.me/"/>
  <updated>2013-08-10T12:23:42+08:00</updated>
  <id>http://hanqin.me/</id>
  <author>
    <name><![CDATA[Han Qin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[android toast usages and tests]]></title>
    <link href="http://hanqin.me/blog/2013/08/10/android-toast/"/>
    <updated>2013-08-10T11:37:00+08:00</updated>
    <id>http://hanqin.me/blog/2013/08/10/android-toast</id>
    <content type="html"><![CDATA[<h3>Usage tips</h3>

<p>I have been perplexed for a long time by the duration parameter of android Toast function,
before I noticed the warning message from android studio</p>

<p><img class="center" src="/images/android_studio_magic_constant_warning.png" title="&lsquo;image&rsquo; &lsquo;images&rsquo;" ></p>

<p>The right way is</p>

<p><code>java
Toast.makeText(activity, "Email was sent successfully.", Toast.LENGTH_LONG).show();
</code></p>

<p>or</p>

<p><code>java
Toast.makeText(activity, "Email was sent successfully.", Toast.LENGTH_SHORT).show();
</code></p>

<h3>Test</h3>

<p>I will demonstrate how to test toast function with <a href="http://robolectric.org/">Robolectric</a></p>

<p>1, For default toast message
<code>java
Toast toast = ShadowToast.getLatestToast();
String text = Robolectric.shadowOf(toast).text;
</code></p>

<p>Also, you can use
<code>java
String text = ShadowToast.getTextOfLatestToast();
</code></p>

<p>To check shown toast count
<code>java
int count = ShadowToast.shownToastCount();
</code></p>

<p>To verify a toast message has been displayed
<code>java
CharSequence message = "custom message"
boolean showed = ShadowToast.showedToast(message);
</code></p>

<p>To get all shown toasts
<code>java
List&lt;Toast&gt; toasts = Robolectric.getShadowApplication().getShownToasts();
</code></p>

<p>To reset all shown toasts list
<code>java
ShadowToast.reset(); // or..
Robolectric.getShadowApplication().getShownToasts().clear();
</code></p>

<p>2, For custom toasts
<code>java
CharSequence message = "custom message";
int layoutResourceIdToCheckForMessage = R.id.custom_toast_text_view_id;
boolean showed = ShadowToast.showedCustomToast(message, layoutResourceIdToCheckForMessage);
</code></p>

<p>For busy developers who don&rsquo;t have time to look at source codes of robolectric. :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[implement email function in android]]></title>
    <link href="http://hanqin.me/blog/2013/07/29/send-email-in-android/"/>
    <updated>2013-07-29T22:45:00+08:00</updated>
    <id>http://hanqin.me/blog/2013/07/29/send-email-in-android</id>
    <content type="html"><![CDATA[<p>There are several ways to implement email function in android, with their own pros and cons. I will try to summarize everything here, and you can find a <a href="https://github.com/hanqin/AndroidEmailDemo">demo application</a> at the end.</p>

<h3>1) Use installed mail apps</h3>

<ul>
<li><p>Create an intent with <em>ACTION_SEND</em> and <em>mailto</em> scheme:</p></li>
<li><p>MimeType can be set to <em>message/rfc822</em> instead of <em>text/plain</em>, to limit applications displayed in the chooser dialog.</p></li>
<li><p><em>message/rfc822</em> stands for</p>

<blockquote><p>Email; EML files, MIME files, MHT files, MHTML files; Defined in RFC 2045 and RFC 2046</p></blockquote></li>
<li><p>There is also an enhanced version, from which you can determine what will be displayed in the chooser dialog.</p></li>
</ul>


<p><code>java
Intent intent = new Intent(Intent.ACTION_SEND, Uri.fromParts("mailto", TO_ME, null));
intent.setType("message/rfc822");
intent.putExtra(Intent.EXTRA_EMAIL, new String[]{TO_ME});
intent.putExtra(Intent.EXTRA_SUBJECT, subject);
intent.putExtra(Intent.EXTRA_TEXT, text);
activity.startActivity(Intent.createChooser(intent, "Send mail..."));
</code></p>

<h3>2) Use the java mail api</h3>

<p>(ported to android by <a href="http://www.jondev.net/">Jon Simon</a>).</p>

<p>Firstly, you will need to download three jar files from <a href="https://code.google.com/p/javamail-android/">https://code.google.com/p/javamail-android/</a> .</p>

<p>Then, simply follow the code provided in the demo application, or you can refer to <a href="http://www.tutorialspoint.com/java/java_sending_email.htm">http://www.tutorialspoint.com/java/java_sending_email.htm</a> for a comprehensive guide.</p>

<h3>3) Use specifically built backend Api</h3>

<p>Most applications have a backend service, it is easy to add an api that collects info from handsets and send mail on the server side.</p>

<h4>Demo application: (last update on Aug, 4, 2013)</h4>

<p><a href="https://github.com/hanqin/AndroidEmailDemo">https://github.com/hanqin/AndroidEmailDemo</a></p>

<h4>References:</h4>

<p><a href="http://stackoverflow.com/questions/2197741/how-to-send-email-from-my-android-application">http://stackoverflow.com/questions/2197741/how-to-send-email-from-my-android-application</a>
<a href="http://stackoverflow.com/questions/6827407/how-to-customize-share-intent-in-android">http://stackoverflow.com/questions/6827407/how-to-customize-share-intent-in-android</a>
<a href="http://en.wikipedia.org/wiki/Internet_media_type">http://en.wikipedia.org/wiki/Internet_media_type</a>
<a href="http://www.jondev.net/articles/Sending_Emails_without_User_Intervention_">http://www.jondev.net/articles/Sending_Emails_without_User_Intervention_</a>(no_Intents)_in_Android
<a href="http://developer.android.com/guide/components/intents-filters.html">http://developer.android.com/guide/components/intents-filters.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[add an android library project in intellij or android studio]]></title>
    <link href="http://hanqin.me/blog/2013/07/28/add-an-android-library-project-in-intellij-or-android-studio/"/>
    <updated>2013-07-28T22:44:00+08:00</updated>
    <id>http://hanqin.me/blog/2013/07/28/add-an-android-library-project-in-intellij-or-android-studio</id>
    <content type="html"><![CDATA[<p>It can be tricky sometimes when adding an android library project in intellij or android studio.
The reasons may vary from time to time but two I recently encountered are:</p>

<ol>
<li>Automatic update of project.properties is disabled in intellij, thus the android library project cannot be added.</li>
<li>Creating a new library module in android studio, for an ant based project, Studio only creates a settings.gradle, but <em>forget</em> to change the project.properties.</li>
</ol>


<p>So far, the root cause is clear, the inconsistency between ide settings and android configs.</p>

<ol>
<li>You can manually update project.properties to a correct value
<code>
target=android-16
android.library.reference.1=../../actionbarsherlock
</code>
and
<code>
android.library=true
target=android-14
</code></li>
<li>Remember to update settings in your IDE</li>
</ol>


<p><img class="center" src="/images/intellij_update_project_properties.png" title="&lsquo;image&rsquo; &lsquo;images&rsquo;" ></p>

<p>That&rsquo;s it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress on heroku - day 2]]></title>
    <link href="http://hanqin.me/blog/2013/07/26/octopress-on-heroku-day-2/"/>
    <updated>2013-07-26T23:40:00+08:00</updated>
    <id>http://hanqin.me/blog/2013/07/26/octopress-on-heroku-day-2</id>
    <content type="html"><![CDATA[<h3>Tasks</h3>

<ol>
<li>Added several plugins, including comments from disqus, my reading from douban, QR code and readability

<ul>
<li>All these plugins and <em>even more</em> can be found <a href="https://github.com/imathis/octopress/wiki/3rd-party-plugins">here</a></li>
</ul>
</li>
</ol>


<h3>Problems</h3>

<ol>
<li>The explanation for Douban plugin is misleading, fixed and sent a pull request</li>
</ol>


<h3>Next</h3>

<ol>
<li>Use sub modules to manage third party plugins?</li>
<li>A better place for facebook like and twitter buttons?</li>
<li>Themes update</li>
<li>Blogs!</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress on heroku - day 1]]></title>
    <link href="http://hanqin.me/blog/2013/07/25/octopress-on-heroku-day-1/"/>
    <updated>2013-07-25T23:10:00+08:00</updated>
    <id>http://hanqin.me/blog/2013/07/25/octopress-on-heroku-day-1</id>
    <content type="html"><![CDATA[<h3>Tasks</h3>

<ol>
<li>Setup <a href="http://octopress.org/">octopress</a> according to the <a href="http://octopress.org/docs/">documentation</a></li>
<li>Update blog configuration, ruby version as well(required by heroku)</li>
<li>Created a <a href="http://hanqin.herokuapp.com/blog/2013/07/25/this-is-a-test/">test blog</a></li>
<li>Update google analytics

<ul>
<li>Thanks to this <a href="http://stefanalfbo.github.io/blog/2013/04/17/octopress-google-analytics-github-pages/">article</a></li>
</ul>
</li>
<li>Markdown <a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#wiki-headers">cheat sheet</a></li>
</ol>


<h3>Problems</h3>

<ol>
<li>Google analytics not working, solution as mentioned above</li>
<li>Slow connection to heroku</li>
</ol>


<p><code>
git push heroku master
</code>
but only got Operation/Connecting timed out error. To fix the issue, manually add ~/.ssh/config, and put following lines in it:
<code>
Host heroku.com
User freemember007
Hostname 107.21.95.3
PreferredAuthentications publickey
IdentityFile ~/.ssh/id_rsa
port 22
</code>
Thanks to this <a href="http://ruby-china.org/topics/10813">article</a></p>

<h3>Next</h3>

<ol>
<li>Comment</li>
</ol>

]]></content>
  </entry>
  
</feed>
